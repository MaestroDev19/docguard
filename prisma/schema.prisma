generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("PRISMA_URL")
  directUrl = env("PRISMA_URL_NON_POOLING")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime   @default(now())
  accounts      Account[]
  documents     Document[]
  sessions      Session[]
}

model Document {
  id          String    @id @default(uuid())
  title       String
  description String?
  file_key         String
  issue_date  DateTime?
  is_card Boolean @default(false)
  expiry_date DateTime?
  category    Category @default(personal)
  user_id     String
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [user_id], references: [id])
}

model InboxMessages {
  id        String   @id @default(uuid())
  title     String
  body      String
  createdAt DateTime @default(now())
}

enum Category {
  personal
  finance
  health
}
